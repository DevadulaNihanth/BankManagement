//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RoyalBank.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class RoyalBankEntities : DbContext
    {
        public RoyalBankEntities()
            : base("name=RoyalBankEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<login_master> login_master { get; set; }
        public virtual DbSet<role_master> role_master { get; set; }
        public virtual DbSet<account_details> account_details { get; set; }
        public virtual DbSet<customer_details> customer_details { get; set; }
        public virtual DbSet<customer_log> customer_log { get; set; }
        public virtual DbSet<transaction_details> transaction_details { get; set; }
        public virtual DbSet<transactiondetails> transactiondetails { get; set; }
        public virtual DbSet<city_dropdown> city_dropdown { get; set; }
        public virtual DbSet<state_dropdown> state_dropdown { get; set; }
        public virtual DbSet<destination_table> destination_table { get; set; }
        public virtual DbSet<source_table> source_table { get; set; }
    
        public virtual int usp_add_transaction(Nullable<long> accountId, Nullable<decimal> amount, string txnType, Nullable<System.DateTime> dateAndTime, ObjectParameter txnId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var txnTypeParameter = txnType != null ?
                new ObjectParameter("TxnType", txnType) :
                new ObjectParameter("TxnType", typeof(string));
    
            var dateAndTimeParameter = dateAndTime.HasValue ?
                new ObjectParameter("DateAndTime", dateAndTime) :
                new ObjectParameter("DateAndTime", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_add_transaction", accountIdParameter, amountParameter, txnTypeParameter, dateAndTimeParameter, txnId);
        }
    
        public virtual int usp_addmoney_by_accountid(Nullable<int> accountId, Nullable<decimal> balance)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("balance", balance) :
                new ObjectParameter("balance", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_addmoney_by_accountid", accountIdParameter, balanceParameter);
        }
    
        public virtual int usp_delete_account_by_accountid(Nullable<long> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delete_account_by_accountid", accountIdParameter);
        }
    
        public virtual int usp_delete_customerbyid(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_delete_customerbyid", customerIdParameter);
        }
    
        public virtual int usp_insert_account(Nullable<long> accountId, Nullable<int> customerId, string accountType, Nullable<decimal> balance, ObjectParameter id_Output)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var accountTypeParameter = accountType != null ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(string));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("Balance", balance) :
                new ObjectParameter("Balance", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_insert_account", accountIdParameter, customerIdParameter, accountTypeParameter, balanceParameter, id_Output);
        }
    
        public virtual int usp_save_customer(Nullable<int> customerId, Nullable<long> sSNID, string customerName, string dOB, string address1, string address2, string city, string state, string status, ObjectParameter id_Out)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var sSNIDParameter = sSNID.HasValue ?
                new ObjectParameter("SSNID", sSNID) :
                new ObjectParameter("SSNID", typeof(long));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var dOBParameter = dOB != null ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(string));
    
            var address1Parameter = address1 != null ?
                new ObjectParameter("Address1", address1) :
                new ObjectParameter("Address1", typeof(string));
    
            var address2Parameter = address2 != null ?
                new ObjectParameter("Address2", address2) :
                new ObjectParameter("Address2", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("State", state) :
                new ObjectParameter("State", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_save_customer", customerIdParameter, sSNIDParameter, customerNameParameter, dOBParameter, address1Parameter, address2Parameter, cityParameter, stateParameter, statusParameter, id_Out);
        }
    
        public virtual int usp_save_customer_log(Nullable<int> customerId, string message)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_save_customer_log", customerIdParameter, messageParameter);
        }
    
        public virtual ObjectResult<usp_view_account_Result> usp_view_account()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_view_account_Result>("usp_view_account");
        }
    
        public virtual ObjectResult<usp_view_account_by_accountid_Result> usp_view_account_by_accountid(Nullable<long> accountId)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_view_account_by_accountid_Result>("usp_view_account_by_accountid", accountIdParameter);
        }
    
        public virtual ObjectResult<usp_view_account_by_customerid_Result> usp_view_account_by_customerid(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_view_account_by_customerid_Result>("usp_view_account_by_customerid", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_view_by_customerid_Result> usp_view_by_customerid(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_view_by_customerid_Result>("usp_view_by_customerid", customerIdParameter);
        }
    
        public virtual ObjectResult<usp_view_by_ssnid_Result> usp_view_by_ssnid(Nullable<long> sSNID)
        {
            var sSNIDParameter = sSNID.HasValue ?
                new ObjectParameter("SSNID", sSNID) :
                new ObjectParameter("SSNID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_view_by_ssnid_Result>("usp_view_by_ssnid", sSNIDParameter);
        }
    
        public virtual ObjectResult<usp_view_customer_Result> usp_view_customer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_view_customer_Result>("usp_view_customer");
        }
    
        public virtual ObjectResult<usp_view_customer_log_Result> usp_view_customer_log()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_view_customer_log_Result>("usp_view_customer_log");
        }
    
        public virtual ObjectResult<usp_view_customer_log_byid_Result> usp_view_customer_log_byid(Nullable<int> customerId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_view_customer_log_byid_Result>("usp_view_customer_log_byid", customerIdParameter);
        }
    
        public virtual int usp_withdrawmoney_by_accountid(Nullable<int> accountId, Nullable<decimal> balance)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(int));
    
            var balanceParameter = balance.HasValue ?
                new ObjectParameter("balance", balance) :
                new ObjectParameter("balance", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_withdrawmoney_by_accountid", accountIdParameter, balanceParameter);
        }
    
        public virtual ObjectResult<usp_city_dropdown_Result> usp_city_dropdown(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_city_dropdown_Result>("usp_city_dropdown", idParameter);
        }
    
        public virtual ObjectResult<usp_state_dropdown_Result> usp_state_dropdown()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_state_dropdown_Result>("usp_state_dropdown");
        }
    
        public virtual ObjectResult<usp_view_by_customerid_or_ssnid_Result> usp_view_by_customerid_or_ssnid(Nullable<int> customerId, Nullable<long> sSNID)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var sSNIDParameter = sSNID.HasValue ?
                new ObjectParameter("SSNID", sSNID) :
                new ObjectParameter("SSNID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_view_by_customerid_or_ssnid_Result>("usp_view_by_customerid_or_ssnid", customerIdParameter, sSNIDParameter);
        }
    
        public virtual ObjectResult<usp_viewAccount_by_customerid_or_Accountid_Result> usp_viewAccount_by_customerid_or_Accountid(Nullable<int> customerId, Nullable<long> accountId)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_viewAccount_by_customerid_or_Accountid_Result>("usp_viewAccount_by_customerid_or_Accountid", customerIdParameter, accountIdParameter);
        }
    
        public virtual ObjectResult<usp_ministatement_Result> usp_ministatement(Nullable<long> accountId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_ministatement_Result>("usp_ministatement", accountIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<usp_view_account_by_type_and_id_Result> usp_view_account_by_type_and_id(Nullable<int> customerId, string accountType)
        {
            var customerIdParameter = customerId.HasValue ?
                new ObjectParameter("CustomerId", customerId) :
                new ObjectParameter("CustomerId", typeof(int));
    
            var accountTypeParameter = accountType != null ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_view_account_by_type_and_id_Result>("usp_view_account_by_type_and_id", customerIdParameter, accountTypeParameter);
        }
    
        public virtual int usp_insert_transaction_details(Nullable<long> accountId, Nullable<decimal> amount, string txntype)
        {
            var accountIdParameter = accountId.HasValue ?
                new ObjectParameter("AccountId", accountId) :
                new ObjectParameter("AccountId", typeof(long));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var txntypeParameter = txntype != null ?
                new ObjectParameter("Txntype", txntype) :
                new ObjectParameter("Txntype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_insert_transaction_details", accountIdParameter, amountParameter, txntypeParameter);
        }
    
        public virtual ObjectResult<string> usp_destination_account(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_destination_account", idParameter);
        }
    
        public virtual ObjectResult<string> usp_source_account()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("usp_source_account");
        }
    
        public virtual ObjectResult<usp_source_accounts_Result> usp_source_accounts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_source_accounts_Result>("usp_source_accounts");
        }
    
        public virtual ObjectResult<usp_source_accounts1_Result> usp_source_accounts1(Nullable<int> sourceID)
        {
            var sourceIDParameter = sourceID.HasValue ?
                new ObjectParameter("sourceID", sourceID) :
                new ObjectParameter("sourceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_source_accounts1_Result>("usp_source_accounts1", sourceIDParameter);
        }
    }
}
